# Implements variable sandhi phenomena, such as elision, resyllabification,
# diaeresis, synizesis, hypermetric lengthening, etc.

import 'byte.grm' as b;
import 'inventory.grm' as i;
import 'utility.grm' as u;

sigma_star = (i.PROSODIC_SYMBOL | i.PHONEME)*;

h_deletion = Optimize[
    CDRewrite[u.Delete["h"] <10>, "", "", sigma_star, 'ltr', 'opt']
];

# A final syllable ending in a vowel, letter m, or diphthong is removed
# before a word beginning with a vowel (or an h-).
elision = Optimize[
    CDRewrite[u.Delete[(i.PHONEMIC_VOWEL | "oj" | "aj" | "aw") " "] <1000>,
                        "", i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt']
];

# Word-final consonant reattaches to the following word with an initial vowel.
# TODO: orthographically annotate using "‿".
resyllabification = Optimize[
    CDRewrite[u.Insert[" "] <100>,
              "", i.CONSONANT " " i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt'] @
    CDRewrite[u.Delete[" "] <100>,
              " " i.CONSONANT, i.PHONEMIC_VOWEL, sigma_star]
];

# High vowels may strengthen to their corresponding glides when adjacent to
# another vowel.
synizesis = Optimize[
    CDRewrite[((("i" | "iː") : "j") | (("u" | "uː") : "w")) <10000>,
                "", i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt'] @
    CDRewrite[((("i" | "iː") : "j") | (("u" | "uː") : "w")) <10000>,
                i.PHONEMIC_VOWEL, "", sigma_star, 'ltr', 'opt']
];

# Glides may lenite to their corresponding vowels. 
diaeresis = Optimize[
    CDRewrite[("w" : "u") <10000>,
              "k" | "g", "", sigma_star, 'ltr', 'opt'] @
    # "aw" diphthongs preceding final m may lenite.
    CDRewrite[("w" : "u") <1000>,
               "", "m", sigma_star, 'ltr', 'opt'] @
    CDRewrite[("jj" : "i") <10000>,
              i.PHONEMIC_VOWEL, i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt']
];

export VARIABLE = Optimize[h_deletion @ resyllabification @ elision @
                           synizesis @ diaeresis];

# Not currently handled:
# * Systole and diastole
# * Hypermeter: elision into the following line.
