# Implements variable sandhi phenomena, such as elision, resyllabification,
# diaeresis, and synizesis.

import 'byte.grm' as b;
import 'inventory.grm' as i;
import 'utility.grm' as u;

sigma_star = (i.PROSODIC_SYMBOL | i.PHONEME | i.STRIKETHROUGH | "‿")*;

h_deletion = Optimize[
    CDRewrite["h" : "h̶", "", "", sigma_star, 'ltr', 'opt']
];

# A final syllable ending in a vowel, letter m, or diphthong is removed
# before a word beginning with a vowel (or an h-).
elision = Optimize[CDRewrite[("a " : "a̶ ̶") |
                            ("e " : "e̶ ̶") |
                            ("i " : "i̶ ̶") |
                            ("o " : "o̶ ̶") |
                            ("u " : "u̶ ̶") |
                            ("ãː " : "ã̶ː̶ ̶") |
                            ("ẽː " : "ẽ̶ː̶ ̶") |
                            ("ĩː " : "ĩ̶ː̶ ̶") |
                            ("õː " : "õ̶ː̶ ̶") |
                            ("ũː " : "ũ̶ː̶ ̶") |
                            ("aː " : "a̶ː̶ ̶") |
                            ("eː " : "e̶ː̶ ̶") |
                            ("iː " : "i̶ː̶ ̶") |
                            ("oː " : "o̶ː̶ ̶") |
                            ("uː " : "u̶ː̶ ̶")
                            , "", "h̶"? i.PHONEMIC_VOWEL, sigma_star]];

# Word-final consonant reattaches to the following word with an initial vowel.
resyllabification = Optimize[
    CDRewrite[ " " : "‿",
              i.CONSONANT, "h̶"? i.PHONEMIC_VOWEL, sigma_star]
];

# High vowels may strengthen to their corresponding glides when adjacent to
# another vowel.
synizesis = Optimize[
    CDRewrite[((("i" | "iː") : "j") | (("u" | "uː") : "w")) <1000>,
                "", i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt'] @
    CDRewrite[((("i" | "iː") : "j") | (("u" | "uː") : "w")) <1000>,
                i.PHONEMIC_VOWEL, "", sigma_star, 'ltr', 'opt']
];

# Glides may lenite to their corresponding vowels in labiovelars.
# TODO: include [j] glide?
diaeresis = Optimize[
    CDRewrite[("w" : "u") <1000>, "k" | "g", "", sigma_star, 'ltr', 'opt']
];

# Lengthening of a usually short syllable.
# NB: this is not currently part of the exported VARIABLE cascade.
diastole = Optimize[
    CDRewrite[(("a" : "aː") | ("e" : "eː") | ("i" : "iː") |
              ("o" : "oː") | ("u" : "uː")) <10000>,
              "", "", sigma_star, 'ltr', 'opt']
];

export VARIABLE = Optimize[h_deletion @ resyllabification @ elision @
                           synizesis @ diaeresis];

# Tests elision markup
test_elision = AssertEqual[
    "tantajne animiːs" @ elision,
    "tantajne̶ ̶animiːs"
];

# Tests h deletion + elision markup.
test_elision_2 = AssertEqual[
    "atkwe hominũː" @ h_deletion @ elision,
    "atkwe̶ ̶h̶ominũː"
];

# Tests resyllabification markup.
test_resyllabification = AssertEqual[
    "ab oris" @ resyllabification,
    "ab‿oris"
];

# Tests h deletion + resyllabification markup. 
test_h_deletion = AssertEqual[
    "fuit hok" @ h_deletion @ resyllabification,
    "fuit‿h̶ok"
];


# TODOs:
# * Hypermeter: when a period has an extra syllable ending in a vowel
#   or m which is elided into the first word of the following period, often with -que words.
#   (1.448 ajrea kuj gradibus surgeːbant liːmina neksajkwe)
# * Systole
