# Implements variable sandhi phenomena, such as elision, resyllabification,
# diaeresis, and synizesis.

import 'byte.grm' as b;
import 'inventory.grm' as i;
import 'utility.grm' as u;

sigma_star = (i.PROSODIC_SYMBOL | i.PHONEME | i.MARKUPS)*;

h_deletion = Optimize[
    # Delete medial "h" to permit additional variable rules, if needed (such as synizesis).
    CDRewrite[u.Delete["h"] <1>,
              i.PHONEME - b.kSpace, i.PHONEME - b.kSpace, sigma_star, 'ltr', 'opt'] @
    CDRewrite[("h" : "h̶" <1>),
              "", "", sigma_star, 'ltr', 'opt']
];

# A final syllable ending in a vowel, letter m, or diphthong is removed
# before a word beginning with a vowel (or an h-).
elision = Optimize[CDRewrite[(("a " : "a̶ ̶") |
                            ("e " : "e̶ ̶") |
                            ("i " : "i̶ ̶") |
                            ("o " : "o̶ ̶") |
                            ("u " : "u̶ ̶") |
                            ("ãː " : "ã̶ː̶ ̶") |
                            ("ẽː " : "ẽ̶ː̶ ̶") |
                            ("ĩː " : "ĩ̶ː̶ ̶") |
                            ("õː " : "õ̶ː̶ ̶") |
                            ("ũː " : "ũ̶ː̶ ̶") |
                            ("aː " : "a̶ː̶ ̶") |
                            ("eː " : "e̶ː̶ ̶") |
                            ("iː " : "i̶ː̶ ̶") |
                            ("oː " : "o̶ː̶ ̶") |
                            ("uː " : "u̶ː̶ ̶") |
                            ("üm " : "ü̶m̶ ̶") |
                            ("oj " : "o̶j̶ ̶") |
                            ("aj " : "a̶j̶ ̶") |
                            ("aw " : "a̶w̶ ̶")) <100>
                            , "", "h̶"? i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt']];

# Word-final consonant reattaches to the following word with an initial vowel.
resyllabification = Optimize[
    CDRewrite[(" " : "‿") <10>,
              i.CONSONANT, "h̶"? i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt']
];

# High vowels may strengthen to their corresponding glides when adjacent to
# another vowel.
synizesis = Optimize[
    CDRewrite[u.Insert["͡"] <1000>,
              ("i" | "iː" | "u" | "uː") , i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt'] @
    CDRewrite[u.Insert["͡"] <1000>,
             i.PHONEMIC_VOWEL, ("i" | "iː" | "u" | "uː"), sigma_star, 'ltr', 'opt']
];

# Glides may lenite to their corresponding vowels. 
diaeresis = Optimize[
    CDRewrite[("w" : "ü") <1000>,
              "k" | "g", "", sigma_star, 'ltr', 'opt'] @
    # "aw" diphthongs preceding final m may lenite.
    CDRewrite[("w" : "ü") <1000>,
              "", "m", sigma_star, 'ltr', 'opt'] @
    CDRewrite[("jj" : "ï") <1000>,
              i.PHONEMIC_VOWEL, i.PHONEMIC_VOWEL, sigma_star, 'ltr', 'opt']
];

# Lengthening of a usually short syllable.
# NB: this is not currently part of the exported VARIABLE cascade.
diastole = Optimize[
    CDRewrite[(("a" : "aː") | ("e" : "eː") | ("i" : "iː") |
              ("o" : "oː") | ("u" : "uː")),
              "", "", sigma_star]
];

export VARIABLE = Optimize[h_deletion @ resyllabification @
                           synizesis @ diaeresis @ elision];
